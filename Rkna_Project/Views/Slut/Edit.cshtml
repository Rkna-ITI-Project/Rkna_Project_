@model Rkna_Project.Models.Slut_Table

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Slut </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Slut_ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Slut_Level, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Slut_Level, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Slut_Level, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Slut_State, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Slut_State)
                    @Html.ValidationMessageFor(model => model.Slut_State, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <div id="map_canvas" style="height: 400px;"></div>
    </div>
    <div class="form-group">
        @Html.Label("Address", htmlAttributes: new { id = "address", @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.Editor(" ", new { htmlAttributes = new { id = "address", @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Slut_X_Point, "Longitude", htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Slut_X_Point, new { htmlAttributes = new { id = "Longitude", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Slut_X_Point, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Slut_Y_Point, "Latitude", htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Slut_Y_Point, new { htmlAttributes = new { id = "Latitude", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Slut_Y_Point, "", new { @class = "text-danger" })
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDWTHLiTeCJ8YVPGdMkZEPXzo_6FeuRwHE&sensor=true"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/Site.js")"></script>
}
